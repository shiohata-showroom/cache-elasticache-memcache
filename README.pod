=pod

=begin html

<p>
    <a href="https://travis-ci.org/zebardy/cache-memcache-elasticache"><img src="https://travis-ci.org/zebardy/cache-memcache-elasticache.svg"></a>
</p>

=end html

=head1 NAME

Cache::Elasticache::Memcache - A wrapper for Cache::Memacache::Fast with support for AWS's auto reconfiguration mechanism

=head1 SYNOPSIS

    use Cache::Memcache::Elasticache;

    my $memd = new Cache::Memcache::Elasticache->new({
        config_endpoint => 'foo.bar',
        update_period => 180,
        # All other options are passed on to Cache::Memcached::Fast
        ...
    });

    # Will update the server list from the configuration endpoint
    $memd->updateServers();

    # Will update the serverlist from the configuration endpoint if the time since
    # the last time the server list was checked is greater than the update period
    # specified when the $memd object was created.
    $memd->checkServers();

    # Class method to retrieve a server list from a configuration endpoint.
    Cache::Memcache::Elasticache->getServersFromEndpoint('foo.bar');

    # All other supported methods are handled by Cache::Memcached::Fast

    This library is currently under development at best it will not do anything harmful
    DO NOT USE

=head1 DESCRIPTION

My attempt to have a perl memcache client able to make use of AWS elasticache reconfiguration. I may abandon this project, it might never work. However I'm going to see where I get to. Perhaps it might end up in something useful for others, atleast that is my hope!


=cut

=pod

=head1 CONSTRUCTOR

    Cache::Elasticache::Memcache->new({
        config_endpoint => 'foo.bar',
        update_period => 180,
        ...
    })


=cut

=pod

=head1 METHODS


=cut

=pod

=head2 checkServers

    my $memd = Cache::Elasticache::Memcache->new({
        config_endpoint => 'foo.bar'
    })

    ...

    $memd->checkServers();

Trigger the the server list to be updated if the time passed since the server list was last updated is greater than the update period (default 180 seconds).

TODO: set default value.


=cut

=pod

=head2 updateServers

    my $memd = Cache::Elasticache::Memcache->new({
        config_endpoint => 'foo.bar'
    })

    ...

    $memd->updateServers();

This method will update the server list regardles of how much time has passed since the server list was last checked.


=cut

=pod

=head1 CLASS METHODS

=head2 getServersFromEndpoint

    Cache::Elasticache::Memcache->getserversFromEndpoint('foo.bar');

This class method will retrieve the server list for a given configuration endpoint.


=cut

=pod

=head1 AUTHOR

Aaron Moses

=head1 COPYWRIGHT

Copyright 2015 Aaron Moses.

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.


=cut

